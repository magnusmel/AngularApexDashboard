{"ast":null,"code":"import _classCallCheck from \"/home/nightflyer/Satya/AngularApexDashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/nightflyer/Satya/AngularApexDashboard/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nexport var DashboardComponent = /*#__PURE__*/(function () {\n  var DashboardComponent = /*#__PURE__*/function () {\n    function DashboardComponent() {\n      _classCallCheck(this, DashboardComponent);\n    } // events\n\n\n    _createClass(DashboardComponent, [{\n      key: \"chartClicked\",\n      value: function chartClicked(e) {\n        console.log(e);\n      }\n    }, {\n      key: \"chartHovered\",\n      value: function chartHovered(e) {\n        console.log(e);\n      }\n    }, {\n      key: \"hexToRGB\",\n      value: function hexToRGB(hex, alpha) {\n        var r = parseInt(hex.slice(1, 3), 16),\n            g = parseInt(hex.slice(3, 5), 16),\n            b = parseInt(hex.slice(5, 7), 16);\n\n        if (alpha) {\n          return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n        } else {\n          return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.chartColor = \"#FFFFFF\";\n        this.canvas = document.getElementById(\"bigDashboardChart\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 200, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.24)\");\n        this.lineBigDashboardChartData = [{\n          label: \"Data\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 7,\n          pointHoverBorderWidth: 2,\n          pointRadius: 5,\n          fill: true,\n          borderWidth: 2,\n          data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\n        }];\n        this.lineBigDashboardChartColors = [{\n          backgroundColor: this.gradientFill,\n          borderColor: this.chartColor,\n          pointBorderColor: this.chartColor,\n          pointBackgroundColor: \"#2c2c2c\",\n          pointHoverBackgroundColor: \"#2c2c2c\",\n          pointHoverBorderColor: this.chartColor\n        }];\n        this.lineBigDashboardChartLabels = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n        this.lineBigDashboardChartOptions = {\n          layout: {\n            padding: {\n              left: 20,\n              right: 20,\n              top: 0,\n              bottom: 0\n            }\n          },\n          maintainAspectRatio: false,\n          tooltips: {\n            backgroundColor: '#fff',\n            titleFontColor: '#333',\n            bodyFontColor: '#666',\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n          },\n          legend: {\n            position: \"bottom\",\n            fillStyle: \"#FFF\",\n            display: false\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                fontColor: \"rgba(255,255,255,0.4)\",\n                fontStyle: \"bold\",\n                beginAtZero: true,\n                maxTicksLimit: 5,\n                padding: 10\n              },\n              gridLines: {\n                drawTicks: true,\n                drawBorder: false,\n                display: true,\n                color: \"rgba(255,255,255,0.1)\",\n                zeroLineColor: \"transparent\"\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                display: false\n              },\n              ticks: {\n                padding: 10,\n                fontColor: \"rgba(255,255,255,0.4)\",\n                fontStyle: \"bold\"\n              }\n            }]\n          }\n        };\n        this.lineBigDashboardChartType = 'line';\n        this.gradientChartOptionsConfiguration = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            bodySpacing: 4,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\",\n            xPadding: 10,\n            yPadding: 10,\n            caretPadding: 10\n          },\n          responsive: 1,\n          scales: {\n            yAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }],\n            xAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 15,\n              bottom: 15\n            }\n          }\n        };\n        this.gradientChartOptionsConfigurationWithNumbersAndGrid = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            bodySpacing: 4,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\",\n            xPadding: 10,\n            yPadding: 10,\n            caretPadding: 10\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawBorder: false\n              },\n              ticks: {\n                stepSize: 500\n              }\n            }],\n            xAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 15,\n              bottom: 15\n            }\n          }\n        };\n        this.canvas = document.getElementById(\"lineChartExample\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#80b6f4');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n        this.lineChartData = [{\n          label: \"Active Users\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          borderWidth: 2,\n          data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630]\n        }];\n        this.lineChartColors = [{\n          borderColor: \"#f96332\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#f96332\",\n          backgroundColor: this.gradientFill\n        }];\n        this.lineChartLabels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        this.lineChartOptions = this.gradientChartOptionsConfiguration;\n        this.lineChartType = 'line';\n        this.canvas = document.getElementById(\"lineChartExampleWithNumbersAndGrid\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientStroke = this.ctx.createLinearGradient(500, 0, 100, 0);\n        this.gradientStroke.addColorStop(0, '#18ce0f');\n        this.gradientStroke.addColorStop(1, this.chartColor);\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, this.hexToRGB('#18ce0f', 0.4));\n        this.lineChartWithNumbersAndGridData = [{\n          label: \"Email Stats\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          borderWidth: 2,\n          data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\n        }];\n        this.lineChartWithNumbersAndGridColors = [{\n          borderColor: \"#18ce0f\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#18ce0f\",\n          backgroundColor: this.gradientFill\n        }];\n        this.lineChartWithNumbersAndGridLabels = [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"];\n        this.lineChartWithNumbersAndGridOptions = this.gradientChartOptionsConfigurationWithNumbersAndGrid;\n        this.lineChartWithNumbersAndGridType = 'line';\n        this.canvas = document.getElementById(\"barChartSimpleGradientsNumbers\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.gradientFill = this.ctx.createLinearGradient(0, 170, 0, 50);\n        this.gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n        this.gradientFill.addColorStop(1, this.hexToRGB('#2CA8FF', 0.6));\n        this.lineChartGradientsNumbersData = [{\n          label: \"Active Countries\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          borderWidth: 1,\n          data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155]\n        }];\n        this.lineChartGradientsNumbersColors = [{\n          backgroundColor: this.gradientFill,\n          borderColor: \"#2CA8FF\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#2CA8FF\"\n        }];\n        this.lineChartGradientsNumbersLabels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        this.lineChartGradientsNumbersOptions = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            bodySpacing: 4,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\",\n            xPadding: 10,\n            yPadding: 10,\n            caretPadding: 10\n          },\n          responsive: 1,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawBorder: false\n              },\n              ticks: {\n                stepSize: 20\n              }\n            }],\n            xAxes: [{\n              display: 0,\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                zeroLineColor: \"transparent\",\n                drawTicks: false,\n                display: false,\n                drawBorder: false\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 0,\n              right: 0,\n              top: 15,\n              bottom: 15\n            }\n          }\n        };\n        this.lineChartGradientsNumbersType = 'bar';\n      }\n    }]);\n\n    return DashboardComponent;\n  }();\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 136,\n    vars: 20,\n    consts: [[1, \"panel-header\", \"panel-header-lg\"], [\"baseChart\", \"\", \"id\", \"bigDashboardChart\", 3, \"datasets\", \"labels\", \"colors\", \"options\", \"chartType\", \"chartHover\", \"chartClick\"], [1, \"main-content\"], [1, \"row\"], [1, \"col-lg-4\"], [1, \"card\", \"card-chart\"], [1, \"card-header\"], [1, \"card-category\"], [1, \"card-title\"], [\"ngbDropdown\", \"\"], [\"type\", \"button\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-round\", \"btn-default\", \"dropdown-toggle\", \"btn-simple\", \"btn-icon\", \"no-caret\"], [1, \"now-ui-icons\", \"loader_gear\"], [\"ngbDropdownMenu\", \"\", 1, \"dropdown-menu-right\"], [\"href\", \"#\", 1, \"dropdown-item\"], [\"href\", \"#\", 1, \"dropdown-item\", \"text-danger\"], [1, \"card-body\"], [1, \"chart-area\"], [\"baseChart\", \"\", \"id\", \"lineChartExample\", 3, \"datasets\", \"labels\", \"colors\", \"options\", \"chartType\", \"chartHover\", \"chartClick\"], [1, \"card-footer\"], [1, \"stats\"], [1, \"now-ui-icons\", \"arrows-1_refresh-69\"], [1, \"col-lg-4\", \"col-md-6\"], [\"baseChart\", \"\", \"id\", \"lineChartExampleWithNumbersAndGrid\", 3, \"datasets\", \"labels\", \"colors\", \"options\", \"chartType\", \"chartHover\", \"chartClick\"], [\"baseChart\", \"\", \"id\", \"barChartSimpleGradientsNumbers\", 3, \"datasets\", \"labels\", \"colors\", \"options\", \"chartType\", \"chartHover\", \"chartClick\"], [1, \"now-ui-icons\", \"ui-2_time-alarm\"], [1, \"col-md-6\"], [1, \"card\", \"card-tasks\"], [1, \"table-full-width\", \"table-responsive\"], [1, \"table\"], [1, \"form-check\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"checked\", \"\", 1, \"form-check-input\"], [1, \"form-check-sign\"], [1, \"text-left\"], [1, \"td-actions\", \"text-right\"], [\"type\", \"button\", \"rel\", \"tooltip\", \"title\", \"\", \"data-original-title\", \"Edit Task\", 1, \"btn\", \"btn-info\", \"btn-round\", \"btn-icon\", \"btn-icon-mini\", \"btn-neutral\"], [1, \"now-ui-icons\", \"ui-2_settings-90\"], [\"type\", \"button\", \"rel\", \"tooltip\", \"title\", \"\", \"data-original-title\", \"Remove\", 1, \"btn\", \"btn-danger\", \"btn-round\", \"btn-icon\", \"btn-icon-mini\", \"btn-neutral\"], [1, \"now-ui-icons\", \"ui-1_simple-remove\"], [\"type\", \"checkbox\", 1, \"form-check-input\"], [1, \"now-ui-icons\", \"loader_refresh\", \"spin\"], [1, \"card\"], [1, \"table-responsive\"], [\"src\", \"https://apex.oracle.com/pls/apex/r/mygmlapexworkspace/a783020211201055214164/login\", \"title\", \"Apex\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"canvas\", 1);\n        i0.ɵɵlistener(\"chartHover\", function DashboardComponent_Template_canvas_chartHover_1_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardComponent_Template_canvas_chartClick_1_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h5\", 7);\n        i0.ɵɵtext(8, \"Global Sales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"h4\", 8);\n        i0.ɵɵtext(10, \"Shipped Products\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"button\", 10);\n        i0.ɵɵelement(13, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"a\", 13);\n        i0.ɵɵtext(16, \"Action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 13);\n        i0.ɵɵtext(18, \"Another action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"a\", 13);\n        i0.ɵɵtext(20, \"Something else here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 14);\n        i0.ɵɵtext(22, \"Remove Data\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 15)(24, \"div\", 16)(25, \"canvas\", 17);\n        i0.ɵɵlistener(\"chartHover\", function DashboardComponent_Template_canvas_chartHover_25_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardComponent_Template_canvas_chartClick_25_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 18)(27, \"div\", 19);\n        i0.ɵɵelement(28, \"i\", 20);\n        i0.ɵɵtext(29, \" Just Updated \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(30, \"div\", 21)(31, \"div\", 5)(32, \"div\", 6)(33, \"h5\", 7);\n        i0.ɵɵtext(34, \"2018 Sales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"h4\", 8);\n        i0.ɵɵtext(36, \"All products\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 9)(38, \"button\", 10);\n        i0.ɵɵelement(39, \"i\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 12)(41, \"a\", 13);\n        i0.ɵɵtext(42, \"Action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"a\", 13);\n        i0.ɵɵtext(44, \"Another action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"a\", 13);\n        i0.ɵɵtext(46, \"Something else here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"a\", 14);\n        i0.ɵɵtext(48, \"Remove Data\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(49, \"div\", 15)(50, \"div\", 16)(51, \"canvas\", 22);\n        i0.ɵɵlistener(\"chartHover\", function DashboardComponent_Template_canvas_chartHover_51_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardComponent_Template_canvas_chartClick_51_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"div\", 18)(53, \"div\", 19);\n        i0.ɵɵelement(54, \"i\", 20);\n        i0.ɵɵtext(55, \" Just Updated \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(56, \"div\", 21)(57, \"div\", 5)(58, \"div\", 6)(59, \"h5\", 7);\n        i0.ɵɵtext(60, \"Email Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"h4\", 8);\n        i0.ɵɵtext(62, \"24 Hours Performance\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(63, \"div\", 15)(64, \"div\", 16)(65, \"canvas\", 23);\n        i0.ɵɵlistener(\"chartHover\", function DashboardComponent_Template_canvas_chartHover_65_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function DashboardComponent_Template_canvas_chartClick_65_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(66, \"div\", 18)(67, \"div\", 19);\n        i0.ɵɵelement(68, \"i\", 24);\n        i0.ɵɵtext(69, \" Last 7 days \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(70, \"div\", 3)(71, \"div\", 25)(72, \"div\", 26)(73, \"div\", 6)(74, \"h5\", 7);\n        i0.ɵɵtext(75, \"Backend development\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"h4\", 8);\n        i0.ɵɵtext(77, \"Tasks\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(78, \"div\", 15)(79, \"div\", 27)(80, \"table\", 28)(81, \"tbody\")(82, \"tr\")(83, \"td\")(84, \"div\", 29)(85, \"label\", 30);\n        i0.ɵɵelement(86, \"input\", 31)(87, \"span\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(88, \"td\", 33);\n        i0.ɵɵtext(89, \"Sign contract for \\\"What are conference organizers afraid of?\\\"\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"td\", 34)(91, \"button\", 35);\n        i0.ɵɵelement(92, \"i\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(93, \"button\", 37);\n        i0.ɵɵelement(94, \"i\", 38);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(95, \"tr\")(96, \"td\")(97, \"div\", 29)(98, \"label\", 30);\n        i0.ɵɵelement(99, \"input\", 39)(100, \"span\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(101, \"td\", 33);\n        i0.ɵɵtext(102, \"Lines From Great Russian Literature? Or E-mails From My Boss?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(103, \"td\", 34)(104, \"button\", 35);\n        i0.ɵɵelement(105, \"i\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(106, \"button\", 37);\n        i0.ɵɵelement(107, \"i\", 38);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(108, \"tr\")(109, \"td\")(110, \"div\", 29)(111, \"label\", 30);\n        i0.ɵɵelement(112, \"input\", 31)(113, \"span\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(114, \"td\", 33);\n        i0.ɵɵtext(115, \"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(116, \"td\", 34)(117, \"button\", 35);\n        i0.ɵɵelement(118, \"i\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(119, \"button\", 37);\n        i0.ɵɵelement(120, \"i\", 38);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(121, \"div\", 18);\n        i0.ɵɵelement(122, \"hr\");\n        i0.ɵɵelementStart(123, \"div\", 19);\n        i0.ɵɵelement(124, \"i\", 40);\n        i0.ɵɵtext(125, \" Updated 3 minutes ago \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(126, \"div\", 25)(127, \"div\", 41)(128, \"div\", 6)(129, \"h5\", 7);\n        i0.ɵɵtext(130, \"All Persons List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(131, \"h4\", 8);\n        i0.ɵɵtext(132, \" Employees Stats\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(133, \"div\", 15)(134, \"div\", 42);\n        i0.ɵɵelement(135, \"iframe\", 43);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"datasets\", ctx.lineBigDashboardChartData)(\"labels\", ctx.lineBigDashboardChartLabels)(\"colors\", ctx.lineBigDashboardChartColors)(\"options\", ctx.lineBigDashboardChartOptions)(\"chartType\", ctx.lineBigDashboardChartType);\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"colors\", ctx.lineChartColors)(\"options\", ctx.lineChartOptions)(\"chartType\", ctx.lineChartType);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"datasets\", ctx.lineChartWithNumbersAndGridData)(\"labels\", ctx.lineChartWithNumbersAndGridLabels)(\"colors\", ctx.lineChartWithNumbersAndGridColors)(\"options\", ctx.lineChartWithNumbersAndGridOptions)(\"chartType\", ctx.lineChartWithNumbersAndGridType);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"datasets\", ctx.lineChartGradientsNumbersData)(\"labels\", ctx.lineChartGradientsNumbersLabels)(\"colors\", ctx.lineChartGradientsNumbersColors)(\"options\", ctx.lineChartGradientsNumbersOptions)(\"chartType\", ctx.lineChartGradientsNumbersType);\n      }\n    },\n    directives: [i1.BaseChartDirective, i2.NgbDropdown, i2.NgbDropdownToggle, i2.NgbDropdownMenu],\n    styles: [\"\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}